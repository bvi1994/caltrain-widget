{"version":3,"sources":["components/DropdownMenu/DropdownStation.js","components/DisplayTime/DisplayTime.js","components/Main.js","components/FAQComponent/ComponentFAQ.js","App.js","serviceWorker.js","index.js"],"names":["DropdownStation","this","props","stationList","changeStation","originOrDestination","options","onChange","Component","DisplayTime","determineService","trainNumber","beginningDigit","Math","floor","stopTimetable","settings","ref","reference","asNavFor","infinite","map","time","className","key","arriveTime","departTime","Main","determineIds","a","async","state","originStationsInfo","destinationStationsInfo","sort","b","id","setState","originStationId","destinationStationId","getStationInfo","station","stationsData","filter","stops","Name","value","changeOriginStation","originStation","destinationStation","getTimes","matchTrips","changeDestinationStation","getStationsData","axios","response","stopsData","data","stationData","getListOfStations","serviceDay","currentDay","stopsNames","stationsList","label","responseOrigin","responseDestination","originTimeTable","scheduledTimes","JSON","stringify","departTimeTable","originTimes","destinationTimes","parse","combinedArray","i","arrivalTime","find","trip","tripInfo","departRealTime","realTime","arriveRealTime","push","length","matchedTrips","originStationSliderRef","destinationSliderRef","Date","getDay","originSlider","destinationSlider","arriveTimetable","departTimetable","slider","FAQComponent","FAQ","question","answer","align","App","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fcaa9eb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Select from 'react-select';\r\n\r\nclass DropdownStation extends Component {\r\n  render(){\r\n    const {stationList, originOrDestination, changeStation} = this.props;\r\n    return (\r\n      <Select\r\n        options={stationList}\r\n        onChange={changeStation}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default DropdownStation;\r\n","import React, {Component} from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport './styles.css'\r\n\r\nclass DisplayTime extends Component {\r\n\r\n  determineService = (trainNumber) => {\r\n    const beginningDigit = Math.floor(trainNumber / 100);\r\n    if(beginningDigit === 1 || beginningDigit === 4){\r\n      return 'local'\r\n    }\r\n    if(beginningDigit === 3 || beginningDigit === 8){\r\n      return 'bullet'\r\n    }\r\n    if(beginningDigit === 2){\r\n      return 'limited'\r\n    }\r\n    return 'special'\r\n  }\r\n\r\n  render() {\r\n    const {stopTimetable, reference, asNavFor} = this.props;\r\n    const settings  = {\r\n      ref: reference,\r\n      asNavFor: asNavFor,\r\n      infinite: false,\r\n    }\r\n    return (\r\n      <Slider\r\n        {...settings}\r\n      >\r\n      {stopTimetable.map(time =>\r\n        <div\r\n          className={`time ${this.determineService(time.trainNumber)}`}\r\n          key={time.trainNumber}\r\n        >\r\n          {time.arriveTime || time.departTime}\r\n        </div>\r\n      )}\r\n      </Slider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplayTime;\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport DropdownStation from './DropdownMenu/DropdownStation'\r\nimport DisplayTime from './DisplayTime/DisplayTime';\r\n\r\nimport './styles.css'\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      originStation: '',\r\n      originStationsInfo: [],\r\n      originStationId: '',\r\n      destinationStation: '',\r\n      destinationStationsInfo: [],\r\n      destinationStationId: '',\r\n      stationsList: [],\r\n      stationsData: [],\r\n      originTimes: [],\r\n      destinationTimes: [],\r\n      matchedTrips: [],\r\n      originStationSliderRef: null,\r\n      destinationSliderRef: null,\r\n      // We need the SliderRef to keep the two slider times in sync. See\r\n      // https://react-slick.neostack.com/docs/example/as-nav-for\r\n      currentDay: new Date().getDay(),\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getStationsData();\r\n    await this.getListOfStations();\r\n    await this.setState({\r\n      originStationSliderRef: this.originSlider,\r\n      destinationSliderRef: this.destinationSlider,\r\n    })\r\n  }\r\n\r\n  determineIds = async () => {\r\n    // To do: edge case with Stanford\r\n    const {originStationsInfo, destinationStationsInfo} = this.state;\r\n    originStationsInfo.sort( (a,b) => b.id - a.id)\r\n    destinationStationsInfo.sort( (a,b) => b.id - a.id)\r\n    if(originStationsInfo[0].id > destinationStationsInfo[0].id){\r\n      // Northbound direction, station numbers need to be odd\r\n      await this.setState({\r\n        originStationId: originStationsInfo[1].id,\r\n        destinationStationId: destinationStationsInfo[1].id\r\n      })\r\n      return;\r\n    }\r\n    // Southbound direction, station numbers need to be even\r\n    await this.setState({\r\n      originStationId: originStationsInfo[0].id,\r\n      destinationStationId: destinationStationsInfo[0].id\r\n    })\r\n  }\r\n\r\n  getStationInfo = (station) => {\r\n    // Grabs the info for the selected station\r\n    return this.state.stationsData.filter(stops => stops.Name === station.value)\r\n  }\r\n\r\n\r\n  changeOriginStation = async (originStation) => {\r\n    const originStationsInfo = this.getStationInfo(originStation);\r\n    await this.setState({\r\n      originStation: originStation,\r\n      originStationsInfo: originStationsInfo,\r\n    })\r\n    if(this.state.destinationStation){\r\n      await this.determineIds()\r\n      await this.getTimes()\r\n      await this.matchTrips();\r\n    }\r\n  }\r\n\r\n  changeDestinationStation = async (destinationStation) => {\r\n    // Handles changes if the user were to change the desintation station of the application\r\n    const destinationStationsInfo = this.getStationInfo(destinationStation);\r\n    await this.setState({\r\n      destinationStation: destinationStation,\r\n      destinationStationsInfo: destinationStationsInfo,\r\n    })\r\n    if(this.state.originStation){\r\n      await this.determineIds()\r\n      await this.getTimes()\r\n      await this.matchTrips();\r\n    }\r\n  }\r\n\r\n  getStationsData = async () => {\r\n    // Makes call to grab the station data such as stop ids for that sation\r\n    const response = await axios(`http://localhost:3002/getStationsData`);\r\n    const stopsData = response.data.stationData;\r\n    this.setState({\r\n      stationsData: stopsData,\r\n    })\r\n  }\r\n\r\n  getListOfStations = async () => {\r\n    // Getting the list of station names for the dropdown menu\r\n    const serviceDay = (this.state.currentDay > 0 && this.state.currentDay < 6) ? 'weekday' : 'weekend'\r\n    const response = await axios(`http://localhost:3002/${serviceDay}/getStationList`);\r\n    const stopsNames = response.data.stationList;\r\n    this.setState({\r\n      stationsList: stopsNames.map((station) => {\r\n        return {value: station, label: `${station} station`}\r\n        // We need the value and label keys as required by the react-select\r\n        // API dropdown menu\r\n      }),\r\n    })\r\n  }\r\n\r\n  getTimes = async () => {\r\n    // Make API calls to get the timetables for the selected stations\r\n    const {originStationId, destinationStationId} = this.state;\r\n    const serviceDay = (this.state.currentDay > 0 && this.state.currentDay < 6) ? 'weekday' : 'weekend'\r\n    const responseOrigin = await axios(`http://localhost:3002/getDepartTimes/${serviceDay}/${originStationId}`)\r\n    const responseDestination = await axios(`http://localhost:3002/getArriveTimes/${serviceDay}/${destinationStationId}`)\r\n    const originTimeTable = responseOrigin.data.scheduledTimes.map((time) => JSON.stringify(time));\r\n    const departTimeTable = responseDestination.data.scheduledTimes.map((time => JSON.stringify(time)));\r\n    this.setState({\r\n      originTimes: originTimeTable,\r\n      destinationTimes: departTimeTable,\r\n    })\r\n  }\r\n\r\n  matchTrips = () => {\r\n    let {originTimes, destinationTimes} = this.state;\r\n    originTimes = originTimes.map(time => JSON.parse(time))\r\n    destinationTimes = destinationTimes.map(time => JSON.parse(time))\r\n    let combinedArray = [];\r\n    for(let i = 0; i < originTimes.length; i++){\r\n      let arrivalTime = destinationTimes.find((trip) => trip.trainNumber === originTimes[i].trainNumber)\r\n      if(!arrivalTime){\r\n        continue;\r\n      }\r\n      const tripInfo = {\r\n        departTime: originTimes[i].arriveTime,\r\n        arriveTime: arrivalTime.arriveTime,\r\n        trainNumber: arrivalTime.trainNumber,\r\n        departRealTime: originTimes[i].realTime,\r\n        arriveRealTime: arrivalTime.realTime,\r\n      }\r\n      combinedArray.push(tripInfo);\r\n    }\r\n    this.setState({\r\n      matchedTrips: combinedArray,\r\n    })\r\n    return combinedArray;\r\n  }\r\n\r\n  render() {\r\n    const {stationsList, originStation, matchedTrips} = this.state;\r\n    const arriveTimetable = matchedTrips.map(({arriveTime, ...misc}) => misc);\r\n    const departTimetable = matchedTrips.map(({departTime, ...misc}) => misc);\r\n    return (\r\n      <div className=\"Main\">\r\n        <DropdownStation\r\n          stationList={stationsList}\r\n          originOrDestination={`origin`}\r\n          changeStation={this.changeOriginStation}\r\n        />\r\n        {arriveTimetable &&\r\n          <DisplayTime\r\n            stopTimetable={arriveTimetable}\r\n            asNavFor={this.state.destinationSliderRef}\r\n            reference={slider => (this.originSlider = slider)}\r\n          />\r\n        }\r\n        <DropdownStation\r\n          stationList={stationsList.filter(station => station !== originStation)}\r\n          originOrDestination={`destination`}\r\n          changeStation={this.changeDestinationStation}\r\n        />\r\n        {departTimetable &&\r\n          <DisplayTime\r\n            stopTimetable={departTimetable}\r\n            asNavFor={this.state.originStationSliderRef}\r\n            reference={slider => (this.destinationSlider = slider)}\r\n          />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, {Component} from 'react';\nimport parse from 'html-react-parser';\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\n\r\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport './styles.css'\r\n\r\nclass FAQComponent extends Component {\r\n  render(){\r\n    const FAQ = [\n      {\n        question: `Who create this application?`,\n        answer: `This application is created by ${`<a href='https://www.linkedin.com/in/bvi1994/'> Brandon Vi</a>`}. Check him out and he is available for hire. ;)`,\n      },\n      {\n        question: `Do you have the source code for the this application? I have ways to make it better!`,\n        answer: `Great! The code can be found <a href='https://github.com/bvi1994/caltrain-widget'>here!</a> I will have a set up guide in the next version of the application.`,\n      },\n      {\n        question: `What are some of the features you will be working on for the next version?`,\n        answer: `Real time integration with the 511.org, automatically going to the closest trip time based on current time, better code doocumentation on the README for developers, notifcation of caltrain problems, just to name a few...`\n      },\n      {\n        question: `There's a bug on your application! Where do I submit bug reports?`,\n        answer: `You can send me an email to brandvi1994 [at] gmail (dot) com, describe the bug and I will get to it.`\n      },\n      {\n        question: `What else should I know?`,\n        answer: `This application is not developed by Caltrain. This is a free service being managed by a geek in his dwindling spare time. It’s provided “as-is” and there are no guarantees (expressed or implied).`\n      },\n    ];\n    return(\n      <div className={`dropdownFAQ`}>\r\n        <Accordion>\n        {FAQ.map(question =>\n          <AccordionItem>\n            <AccordionItemHeading>\n              <AccordionItemButton>\n                {parse(question.question)}\n                </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                <p align='left'>\n                  {parse(question.answer)}\n                </p>\n              </AccordionItemPanel>\n            </AccordionItem>\n        )}\r\n        </Accordion>\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FAQComponent;\r\n","import React, {Component} from 'react';\nimport './App.css'\nimport Main from './components/Main'\nimport FAQComponent from './components/FAQComponent/ComponentFAQ'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <Main />\n        </div>\n        <center className=\"Disclaimer\">\n          This application is NOT run by Caltrain or any of its affliates or contractors. Created by <a href={`https://www.linkedin.com/in/bvi1994/}`}>Brandon Vi</a> Help me improve the application by getting the <a href={`https://github.com/bvi1994/caltrain-widget`}>source code</a>\n          <FAQComponent />\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}